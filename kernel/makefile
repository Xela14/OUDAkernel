# Contains all variable definitions
include config.mk

# FIXME: improve this to be more dynamic
KERNEL := ouda.kernel
# OBJS   := boot.o kernel.o tty.o

OBJS := $(patsubst %.c,%.o,$(shell find . -name "*.c"))
OBJS += $(patsubst %.s,%.o,$(shell find . -name "*.s"))
OBJS += $(patsubst %.S,%.o,$(shell find . -name "*.S"))


# Clear list of suffixes and add my own
.SUFFIXES:
.SUFFIXES: .o .c .s .S .kernel

.PHONY: all kernel clean debug-symbols

all: kernel

kernel: $(KERNEL) ./linker.ld debug-symbols

$(KERNEL): $(OBJS)
	$(LD) -T ./linker.ld -o $@ $(OBJS) -L$(PATH_LIBC) -lk

%.o: %.c
	$(CC) -MD -c $< -o $@ $(CFLAGS)
 
# The 2 assembly extension formats are sepperated for clarity, technically you can send both to gcc and the same would happen
# ASM files that require preprocessing are handled by gcc
%.o: %.S
	$(CC) -MD -c $< -o $@ $(CFLAGS)

# ASM files that don't require preprocessing are handled directly by the assembler
%.o: %.s
	$(AS) $< -o $@

clean:
	rm -f ../ouda.sym
	rm -f ouda.kernel
	rm -f $(OBJS) *.o */*.o */*/*.o
	rm -f $(OBJS:.o=.d) *.d */*.d */*/*.d

debug-symbols:
	objcopy --only-keep-debug ouda.kernel ../ouda.sym
	objcopy --strip-debug ouda.kernel

# Include rules to make this makefile depend on changes in header files as well generated by -MD flag
-include $(OBJS:.o=.d)